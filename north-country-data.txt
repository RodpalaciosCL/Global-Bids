1. Asegurar tu enrutador
En src/App.tsx envuelve todo en un <Router> de Wouter y declara dos rutas claras:

tsx
Copiar
Editar
import { Router, Route } from 'wouter';
import Home from './pages/Home';
import Marketplace from './pages/Marketplace';

export default function App() {
  return (
    <Router>
      <Route path="/marketplace" component={Marketplace} />
      <Route path="/" component={Home} />
    </Router>
  );
}
De este modo / siempre carga Home y /marketplace el catálogo.

2. Darle IDs directos a cada sección del Home
En src/pages/Home.tsx (y en cada sección de la página):

tsx
Copiar
Editar
export default function Home() {
  return (
    <>
      <header id="inicio">…</header>
      <section id="nosotros">…</section>
      <section id="servicios">…</section>
      <section id="subastas">…</section>
      …
    </>
  );
}
Esto le dice al navegador exactamente dónde hacer scroll cuando vaya a /​#subastas, etc.

3. Simplificar el Header: enlaces HTML para hashes, Link para SPA
En src/components/layout/Header.tsx reemplaza toda la lógica extraña por dos listados:

Enlaces “hash” (recarga de página + scroll automático del navegador)

Enlaces SPA (Wouter Link → /marketplace)

tsx
Copiar
Editar
import { Link } from 'wouter';

export function Header() {
  const linksHash = [
    { href: '/#inicio', label: 'Inicio',    icon: 'fa-home' },
    { href: '/#nosotros', label: 'Nosotros', icon: 'fa-users' },
    { href: '/#servicios', label: 'Servicios', icon: 'fa-wrench' },
    { href: '/#subastas', label: 'Subastas',  icon: 'fa-gavel' },
    { href: '/#soporte', label: 'Soporte',   icon: 'fa-headset' },
    { href: '/#contacto', label: 'Contacto', icon: 'fa-envelope' },
  ];

  const linksSPA = [
    { href: '/marketplace', label: 'Marketplace', icon: 'fa-th-large' },
  ];

  return (
    <nav className="flex items-center space-x-4">
      {/* Hash links: recarga + scroll */}
      {linksHash.map((i) => (
        <a
          key={i.href}
          href={i.href}
          className="text-white hover:bg-white/10 px-3 py-2 rounded-md flex items-center"
        >
          <i className={`fas ${i.icon} mr-1`}></i>
          {i.label}
        </a>
      ))}

      {/* SPA links: sin recarga */}
      {linksSPA.map((i) => (
        <Link
          key={i.href}
          href={i.href}
          className="text-white hover:bg-white/10 px-3 py-2 rounded-md flex items-center"
        >
          <i className={`fas ${i.icon} mr-1`}></i>
          {i.label}
        </Link>
      ))}
    </nav>
  );
}
Los <a href="/#foo"> dejan al navegador saltar y hacer scroll sin código extra.

Los <Link href="/marketplace"> usan Wouter para no recargar al entrar al catálogo.

4. Quitar TODO JavaScript de “scroll”
Busca y elimina cualquier useEffect u listener que intente “detectar hash y hacer scroll” en tu Home o en tu Header. Con los IDs y los <a> basta: el navegador salta automáticamente.

5. Probar paso a paso
Desde /marketplace→ clic en “Subastas”

Debería recargar a /​#subastas y posicionarte en esa sección sin volver al inicio.

Desde cualquier /#servicios o /#nosotros → clic en “Marketplace”

Debería ir a /marketplace sin recarga extra de header ni scroll raro.

Desde Home → clic en “Subastas” o “Nosotros”

Sin paso intermedio, saltas directo a la sección correcta.

Si después de esto sigue sin funcionar, revisa en DevTools la URL y el ID de destino: si coinciden, el navegador está habilitado para hacerlo.

Con esto eliminas cualquier lógica extra y dejas que el navegador haga su trabajo de manera “HTML básica”. Copia y pega al ingeniero de Replit; no hay nada más allá de un par de rutas y enlaces estándar. ¡Avísame si te queda alguna duda!








Fuentes

Preguntar a ChatGPT



Herramientas


