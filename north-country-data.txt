Asunto: Corrección definitiva de navegación hash en React + Wouter

1. App.tsx – Router limpio

tsx
Copiar
Editar
import { Router, Route } from 'wouter';
import Header from './components/layout/Header';
import Home from './pages/Home';
import Marketplace from './pages/Marketplace';

export default function App() {
  return (
    <Router>
      <Header />
      <Route path="/marketplace" component={Marketplace} />
      <Route path="/" component={Home} />
    </Router>
  );
}
Así garantizas que / cargue siempre Home y /marketplace siempre Marketplace.

2. Home.tsx – IDs exactos y offset para header fijo

tsx
Copiar
Editar
export default function Home() {
  return (
    <>
      <section id="inicio"   className="scroll-mt-20">…</section>
      <section id="nosotros" className="scroll-mt-20">…</section>
      <section id="servicios"className="scroll-mt-20">…</section>
      <section id="subastas" className="scroll-mt-20">…</section>
      <section id="soporte"  className="scroll-mt-20">…</section>
      <section id="contacto" className="scroll-mt-20">…</section>
    </>
  );
}
scroll-mt-20 (Tailwind) o scroll-margin-top en CSS compensa la altura del header fijo.

Añade en tu CSS global:

css
Copiar
Editar
html {
  scroll-behavior: smooth;
}
3. Header.tsx – sólo <a> para hashes, <Link> para SPA

tsx
Copiar
Editar
import { Link } from 'wouter';

export function Header() {
  const hashLinks = [
    ['/#inicio',   'Inicio',    'fa-home'],
    ['/#nosotros','Nosotros', 'fa-users'],
    ['/#servicios','Servicios','fa-wrench'],
    ['/#subastas', 'Subastas',  'fa-gavel'],
    ['/#soporte',  'Soporte',   'fa-headset'],
    ['/#contacto','Contacto',  'fa-envelope'],
  ];

  return (
    <nav className="flex items-center space-x-4">
      {hashLinks.map(([href, label, icon]) => (
        <a key={href}
           href={href}
           className="text-white hover:bg-white/10 px-3 py-2 rounded-md flex items-center"
        >
          <i className={`fas ${icon} mr-1`} />{label}
        </a>
      ))}

      <Link href="/marketplace"
            className="text-white hover:bg-white/10 px-3 py-2 rounded-md flex items-center"
      >
        <i className="fas fa-th-large mr-1" />Marketplace
      </Link>
    </nav>
  );
}
No uses onClick, preventDefault(), ni window.location para hashes.

El navegador recarga (o navega) y hace scroll automático a #subastas, etc.

4. Elimina cualquier código extra de “scroll”
Borra todo useEffect o listener que intente capturar window.location.hash y desplazar manualmente. Con los enlaces y los IDs basta.

5. Pruebas finales

Desde /marketplace → clic en “Subastas” → la URL pasa a /#subastas y scroll al bloque correspondiente.

Desde cualquier sección de Home → clic en “Marketplace” → navega a /marketplace sin salto extraño.

Desde Home → clic en “Servicios” → scroll suave a #servicios, cubierto por scroll-margin-top.

Si tras esto sigue fallando, comprueba en DevTools que:

El <a> apunta a la ruta correcta (/#subastas).

El elemento destino tiene exactamente id="subastas".

No hay otro CSS que oculte o desplace el ancla.

Con estos 5 pasos eliminas toda lógica superflua y dejas al navegador manejar hash y rutas SPA de forma nativa.








Fuentes

Preguntar a ChatGPT
