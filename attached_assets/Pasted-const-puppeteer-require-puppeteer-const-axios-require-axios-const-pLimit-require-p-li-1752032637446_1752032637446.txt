const puppeteer = require('puppeteer');
const axios = require('axios');
const pLimit = require('p-limit');

const PAGE2_URL = 'https://northcountry.auctiontechs.com/auction-detail/174912699568418f53a4cac?page=2';
const CONCURRENCY = 5;

// HEAD request para validar existencia de imagen
async function verificarImagen(url) {
  try {
    const res = await axios.head(url, { timeout: 5000 });
    return res.status === 200;
  } catch {
    return false;
  }
}

(async () => {
  const browser = await puppeteer.launch({ headless: true, args: ['--no-sandbox'] });
  const limit = pLimit(CONCURRENCY);

  // Abrir p√°gina 2
  const page = await browser.newPage();
  console.log(`üåê Abriendo p√°gina 2: ${PAGE2_URL}`);
  await page.goto(PAGE2_URL, { waitUntil: 'networkidle2' });
  await page.waitForSelector('a[href*="/item-detail"]');

  // Scroll para cargar im√°genes lazy-load
  for (let i = 0; i < 4; i++) {
    await page.evaluate(() => window.scrollBy(0, window.innerHeight));
    await new Promise(r => setTimeout(r, 500));
  }

  // Extraer lista de lotes
  const lotes = await page.$$eval('a[href*="/item-detail"]', links => {
    const seen = new Set();
    return links.map(link => {
      const href = link.href;
      const id = href.split('/item-detail/')[1].split('?')[0];
      const title = link.innerText.trim().split('\n')[0];
      if (id && !seen.has(id)) {
        seen.add(id);
        return { id, title, url: href };
      }
      return null;
    }).filter(Boolean);
  });
  await page.close();

  console.log(`‚úÖ Encontrados ${lotes.length} lotes en p√°gina 2.\n`);

  // Para cada lote, contar fotos en paralelo
  const detalles = await Promise.all(
    lotes.map(lote => limit(async () => {
      const p = await browser.newPage();
      await p.goto(lote.url, { waitUntil: 'domcontentloaded' });
      await p.waitForTimeout(600);

      // Forzar scroll lateral en carrusel
      const slides = await p.$$eval('.slick-track .slick-slide', s => s.length);
      for (let i = 0; i < slides; i++) {
        await p.click('.slick-next').catch(() => {});
        await p.waitForTimeout(200);
      }

      // Extraer todas las im√°genes
      const images = await p.$$eval('.slick-track img', imgs =>
        imgs.map(i => i.src).filter(Boolean)
      );
      await p.close();

      // Verificar al menos la primera
      const fotosValidas = images.length && await verificarImagen(images[0]);
      return {
        id: lote.id,
        title: lote.title,
        url: lote.url,
        fotos: fotosValidas ? images.length : 0
      };
    }))
  );

  await browser.close();

  // Mostrar resumen
  console.log('\nüìä Resumen de P√°gina 2:\n');
  console.table(
    detalles.map(d => ({
      ID: d.id,
      T√≠tulo: d.title.slice(0, 40),
      Fotos: d.fotos
    }))
  );
})();
