# üìã Scraper Bulk de Lotes Aut√©nticos ‚Äì Replit

## Instalaci√≥n  
```bash  
npm install puppeteer axios p-limit fs  
C√≥digo √∫nico ‚Äì scrape_authentic_lotes.js
js
Copiar
Editar
const puppeteer=require('puppeteer');const axios=require('axios');const pLimit=require('p-limit');const fs=require('fs');const AUCTION_URL='https://northcountry.auctiontechs.com/auction-detail/174912699568418f53a4cac';const CONCURRENCY=5;async function headOK(url){try{const r=await axios.head(url,{timeout:5000});return r.status===200}catch{return false;}};(async()=>{const browser=await puppeteer.launch({headless:true,args:['--no-sandbox']});const page=await browser.newPage();await page.goto(AUCTION_URL,{waitUntil:'networkidle2'});await page.waitForSelector('select');await page.evaluate(()=>{document.querySelectorAll('select').forEach(s=>{if(s.previousElementSibling&&/Items Per Page/i.test(s.previousElementSibling.innerText))s.value='40'});const btn=[...document.querySelectorAll('button')].find(b=>/Filter/i.test(b.innerText));if(btn)btn.click();});await page.waitForNavigation({waitUntil:'networkidle2'});await page.waitForSelector('a[href*="/item-detail"]');for(let i=0;i<4;i++){await page.evaluate(()=>window.scrollBy(0,window.innerHeight));await new Promise(r=>setTimeout(r,500));}const lotes=await page.$$eval('a[href*="/item-detail"]',links=>{const seen=new Set();return links.map(l=>{const u=l.href;const id=u.split('/item-detail/')[1].split('?')[0];const t=l.innerText.trim().split('\n')[0];if(id&&!seen.has(id)){seen.add(id);return{id,t,u};}return null}).filter(Boolean);});await page.close();const limit=pLimit(CONCURRENCY);const items=await Promise.all(lotes.map(l=>limit(async()=>{const p=await browser.newPage();await p.goto(l.u,{waitUntil:'domcontentloaded'});await p.waitForTimeout(600);const slides=await p.$$eval('.slick-track .slick-slide',s=>s.length);for(let i=0;i<slides;i++){await p.click('.slick-next').catch(()=>{});await p.waitForTimeout(200);}const imgs=await p.$$eval('.slick-track img',i=>i.map(x=>x.src).filter(x=>x.startsWith('http')));await p.close();const ok=imgs.length>0&&await headOK(imgs[0]);return ok?{id:l.id,title:l.t,url:l.u,photos:imgs.length}:null;})));await browser.close();const valid=items.filter(x=>x);let md='# Detalle de Lotes Aut√©nticos\\n|ID|T√≠tulo|URL|Fotos|\\n|--|--|--|--:|\\n';valid.forEach(d=>{md+=`|${d.id}|${d.title.replace(/\\|/g,'\\\\|')}|${d.url}|${d.photos}|\\n`;});fs.writeFileSync('detalle_lotes.md',md);console.log('‚úÖ detalle_lotes.md generado con',valid.length,'lotes v√°lidos');})();
Ejecuci√≥n
bash
Copiar
Editar
node scrape_authentic_lotes.js  
El script:

Fija ‚ÄúItems Per Page = 40‚Äù y pulsa Filter

Extrae IDs y t√≠tulos reales de los 40 lotes

Abre cada lote en paralelo (5 a la vez)

Fuerza scroll del carrusel para cargar todas las im√°genes

Verifica HEAD de la primera imagen contra AWS S3

Solo incluye lotes con im√°genes v√°lidas

Genera detalle_lotes.md con la tabla final lista para tu Marketplace

makefile
Copiar
Editar
::contentReference[oaicite:0]{index=0}