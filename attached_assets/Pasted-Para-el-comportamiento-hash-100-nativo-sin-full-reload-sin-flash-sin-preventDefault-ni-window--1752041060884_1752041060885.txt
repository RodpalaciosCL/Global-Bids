Para el comportamiento ‚Äúhash‚Äù 100% nativo (sin full-reload, sin flash, sin preventDefault ni window.location), Wouter NO va a dejar que el navegador haga el scroll por s√≠ solo, porque est√° manejando la navegaci√≥n como SPA. La √∫nica forma de restaurar el ‚Äúsentir‚Äù de un hash link en una SPA es implementar un peque√±o scroll-on-hash en el componente Home.

1. Enlaza siempre con <a href="/#secci√≥n">
diff
Copiar
Editar
<!-- Header.tsx -->
<nav>
  {/* Secciones home (hash links puros) */}
  <a href="/#inicio"    className="px-6 py-3">Inicio</a>
  <a href="/#nosotros"  className="px-6 py-3">Nosotros</a>
  <a href="/#servicios" className="px-6 py-3">Servicios</a>
  <a href="/#subastas"  className="px-6 py-3">Subastas</a>
  <a href="/#soporte"   className="px-6 py-3">Soporte</a>
  <a href="/#contacto"  className="px-6 py-3">Contacto</a>

  {/* Ruta SPA independiente */}
  <Link href="/marketplace" className="px-6 py-3">Marketplace</Link>
</nav>
üîë Importante: no uses onClick, preventDefault, ni window.location. Estas etiquetas <a> har√°n que el browser ‚Äúnavegue‚Äù a /#contacto, pero como es una SPA no recarga la p√°gina entera y no hace scroll autom√°ticamente.

2. Agrega un ‚Äúscroll-on-hash‚Äù en tu Home
En client/src/pages/Home.tsx a√±ade este hook:

tsx
Copiar
Editar
import { useEffect } from "react";
import { useLocation } from "wouter";

export default function Home() {
  const [location] = useLocation();

  useEffect(() => {
    // Extrae la parte tras el '#'
    const [, hash] = location.split("#");
    if (hash) {
      // Dale al navegador un tick para montar contenido
      setTimeout(() => {
        const el = document.getElementById(hash);
        if (el) {
          // Scroll suave y nativo
          el.scrollIntoView({ behavior: "smooth", block: "start" });
        }
      }, 50);
    }
  }, [location]);

  return (
    <>
      <section id="inicio">‚Ä¶</section>
      <section id="nosotros">‚Ä¶</section>
      <section id="servicios">‚Ä¶</section>
      <section id="subastas">‚Ä¶</section>
      <section id="soporte">‚Ä¶</section>
      <section id="contacto">‚Ä¶</section>
    </>
  );
}
Este efecto escucha el cambio de ruta (location de Wouter).

Si detecta un #algo, busca el elemento con ese id y hace scrollIntoView({behavior:"smooth"}).

No hay full-reload ni flash blanco, y obtienes un scroll suave ‚Äúcomo hash link nativo‚Äù.

3. (Opcional) CSS global para scroll-behavior
En tu CSS global (por ejemplo en index.css):

css
Copiar
Editar
html {
  scroll-behavior: smooth;
}
Esto asegura suavizado tambi√©n si en alg√∫n otro punto usas anclas nativas.

Prueba final
Arrancas en / ‚Üí clic ‚ÄúMarketplace‚Äù ‚Üí vas a /marketplace

Desde /marketplace ‚Üí clic ‚ÄúContacto‚Äù ‚Üí hash link cambia a /#contacto, Wouter renderiza <Home>, el hook hace scroll al <section id="contacto"> sin recarga ni parpadeo.

Con esto, el router no interfiere con tus hash links y recuperas ese comportamiento de navegadores cl√°sicos.








Fuentes

Preguntar a ChatGPT

